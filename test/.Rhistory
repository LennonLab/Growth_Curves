rm(list=ls())
setwd("C:/Users/Venus/Github/Growth_Curves/test")
source("../bin/modified_Gomp.R")
rm(list=ls())
setwd("C:/Users/Venus/Github/Growth_Curves/test")
# Load Dependencies
source("../bin/modified_Gomp.R")
# Run Example (CSV file)
# CSV file must have the following format: Header followed by whole or decimal numbers
# Time  A1  A2  A3  ...
# 30    0.2 0.1 0.4 ...
growth.modGomp("../data/Brentgrowthcurve.csv", "csv_test", synergy=F, temp=F, smooth =T)
?filter
filter(s, rep(1/11,11), circular=F, sides=2)
rm(list=ls())
setwd("C:/Users/Venus/Github/Growth_Curves/test")
source("../bin/modified_Gomp.R")
growth.modGomp("../data/Brentgrowthcurve.csv", "csv_test", synergy=F, temp=F, smooth =T)
growth.modGomp("../data/Brentgrowthcurve.csv", "csv_test", synergy=F, temp=F, smooth =T)
rm(list=ls())
setwd("C:/Users/Venus/Github/Growth_Curves/test")
source("../bin/modified_Gomp.R")
growth.modGomp("../data/Brentgrowthcurve.csv", "csv_test", synergy=F, temp=F, smooth =T)
rm(list=ls())
setwd("C:/Users/Venus/Github/Growth_Curves/test")
source("../bin/modified_Gomp.R")
growth.modGomp("../data/Brentgrowthcurve.csv", "csv_test", synergy=F, temp=F, smooth =T)
rm(list=ls())
setwd("C:/Users/Venus/Github/Growth_Curves/test")
source("../bin/modified_Gomp.R")
growth.modGomp("../data/Brentgrowthcurve.csv", "csv_test", synergy=F, temp=F, smooth =T)
rm(list=ls())
setwd("C:/Users/Venus/Github/Growth_Curves/test")
source("../bin/modified_Gomp.R")
growth.modGomp("../data/Brentgrowthcurve.csv", "csv_test", synergy=F, temp=F, smooth =T)
rm(list=ls())
setwd("C:/Users/Venus/Github/Growth_Curves/test")
source("../bin/modified_Gomp.R")
growth.modGomp("../data/Brentgrowthcurve.csv", "csv_test", synergy=F, temp=F, smooth =T)
growth.modGomp("../data/brentA4.csv", "csv_test", synergy=F, temp=F, smooth =T)
# Clear environment #
rm(list = ls())
# Load and require dependencies #
package.list <- c('vegan', 'nlme' ,'data.table', 'plyr', 'tidyr', 'dplyr', 'reshape', 'reshape2', 'ggplot2')
for (package in package.list) {
if (!require(package, character.only=T, quietly=T)) {
install.packages(package)
library(package, character.only=T)
} }
# Clear environment #
rm(list = ls())
# Load and require dependencies #
package.list <- c('vegan', 'nlme' ,'data.table', 'plyr', 'tidyr', 'dplyr', 'reshape', 'reshape2', 'ggplot2')
for (package in package.list) {
if (!require(package, character.only=T, quietly=T)) {
install.packages(package)
library(package, character.only=T)
} }
brent <- read.csv("brent.csv", header = T)
View(brent)
# Clear environment #
rm(list = ls())
# Load and require dependencies #
package.list <- c('vegan', 'nlme' ,'data.table', 'plyr', 'tidyr', 'dplyr', 'reshape', 'reshape2', 'ggplot2')
for (package in package.list) {
if (!require(package, character.only=T, quietly=T)) {
install.packages(package)
library(package, character.only=T)
} }
brent <- read.csv("brent.csv", header = T)
View(brent)
brent <- subset(brent, select = c("Treatment", "Rep", "umax", "A", "L"))
# Clear environment #
rm(list = ls())
# Load and require dependencies #
package.list <- c('vegan', 'nlme' ,'data.table', 'plyr', 'tidyr', 'dplyr', 'reshape', 'reshape2', 'ggplot2')
for (package in package.list) {
if (!require(package, character.only=T, quietly=T)) {
install.packages(package)
library(package, character.only=T)
} }
data <- read.csv("brent.csv", header = T)
# Subset relevant variables #
brent <- subset(data, select = c("Treatment", "Rep", "umax", "A", "L"))
# Summarize umax values based on treatment type #
brent.mean <- ddply(brent, c("Treatment"), summarise, mean=mean(umax))
# Bar graph showing the difference in umax between treatments for each strain #
brent.mean.barplot <- ggplot(brent.mean, aes(x=Treatment, y = mean)) +
geom_bar(stat = "identity", width=0.5, position="dodge", color="black", size=1.25, fill="white") +
theme_bw()
# Standard Errors #
brent.means.sem <- ddply(brent, c("Treatment"), summarise,
mean=mean(umax), sem=sd(umax)/sqrt(length(umax)))
brent.means.sem <- transform(brent.means.sem, lower=mean-sem, upper=mean+sem)
# Ploting bargraph with standard errors #
brent.mean.barplot +
geom_errorbar(aes(ymax=upper, ymin=lower), position=position_dodge(0.9), width=0.15, data=brent.means.sem)  +
labs(x="Treatment", y="Maximum growth rate") +
theme_classic() +
theme(axis.text=element_text(colour="black", size=18),
axis.title=element_text(size=20),
axis.title.y = element_text(colour="black",  margin = margin(0,25,0,0)),
axis.title.x = element_text(colour="black",margin=margin(18,0,0,0)),
panel.border = element_rect(linetype = "solid", colour = "black", size=2, fill=NA))
brent.umax.t <- t.test(umax~Treatment, data=brent)
brent.umax.t # umax increased with Rpf treatment
# t = -4.16, df = 3.91, p-value = 0.015 #
# Summarize lag time growth parameters #
brent.mean.l <- ddply(brent, c("Treatment"), summarise, mean=mean(L))
# Bar graph showing the difference in lag time between treatments for each strain #
brent.mean.l.barplot <- ggplot(brent.mean.l, aes(x=Treatment, y = mean)) +
geom_bar(stat = "identity", width=0.5, position="dodge", color="black", size=1.25, fill="white") +
theme_bw()
# Standard Errors #
brent.means.l.sem <- ddply(brent, c("Treatment"), summarise,
mean=mean(L), sem=sd(L)/sqrt(length(L)))
brent.means.l.sem <- transform(brent.means.l.sem, lower=mean-sem, upper=mean+sem)
# Ploting bargraph with standard errors #
brent.mean.l.barplot +
geom_errorbar(aes(ymax=upper, ymin=lower), position=position_dodge(0.9), width=0.15, data=brent.means.l.sem)  +
labs(x="Treatment", y="Lag Time") +
theme_classic() +
theme(axis.text=element_text(colour="black", size=18),
axis.title=element_text(size=20),
axis.title.y = element_text(colour="black",  margin = margin(0,25,0,0)),
axis.title.x = element_text(colour="black",margin=margin(18,0,0,0)),
panel.border = element_rect(linetype = "solid", colour = "black", size=2, fill=NA))
brent.l.t <- t.test(L~Treatment, data=brent)
brent.l.t # Lag time does not seem to be different among treatment but that doesn't make sense
# Summarize Biomass (A) data #
brent.mean.a <- ddply(brent, c("Treatment"), summarise, mean=mean(A))
# Bar graph showing the difference in umax between treatments for each strain #
brent.mean.a.barplot <- ggplot(brent.mean.a, aes(x=Treatment, y = mean)) +
geom_bar(stat = "identity", width=0.5, position="dodge", color="black", size=1.25, fill="white") +
theme_bw()
# Standard Errors #
brent.means.a.sem <- ddply(brent, c("Treatment"), summarise,
mean=mean(A), sem=sd(A)/sqrt(length(A)))
brent.means.a.sem <- transform(brent.means.a.sem, lower=mean-sem, upper=mean+sem)
# Ploting bargraph with standard errors #
brent.mean.a.barplot +
geom_errorbar(aes(ymax=upper, ymin=lower), position=position_dodge(0.9), width=0.15, data=brent.means.a.sem)  +
labs(x="Treatment", y="Biomass Yield (OD600)") +
theme_classic() +
theme(axis.text=element_text(colour="black", size=18),
axis.title=element_text(size=20),
axis.title.y = element_text(colour="black",  margin = margin(0,25,0,0)),
axis.title.x = element_text(colour="black",margin=margin(18,0,0,0)),
panel.border = element_rect(linetype = "solid", colour = "black", size=2, fill=NA))
brent.l.a <- t.test(A~Treatment, data=brent)
brent.l.a # Biomass increases with Rpf treatment
# Results: t = -754, df = 4.97, p-value < 0.0005
